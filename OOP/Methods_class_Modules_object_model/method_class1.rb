=begin
Методы класса - такие же методы, как и у объекта, только вызываются у класса, а не у объекта. Пример - Car.new
Увлекаться ими не стоит. Обильное использование считается плохим тоном. Почти всегда метод класса можно заменить
методом инстанса класса.

Рука об руку с методами класса идут переменные класса. Точно также как есть инстанс переменные, которые можно
использовать в методах экземпляра класса. Есть переменные класса, которые можно использовать в методах класса.
Их отличие в том, что инстанс переменные, содержат данные которые доступны внутри класса, но они не разделяются
между объектами. Переменная класса разделяются между самим классом - к какмоу бы классу или подклассу не обратились -
эта переменная будет иметь общее значение для них. Есть и наследование и метод super.

Еще один случай использования методов класса - непосредственно в классе. Допустим, на нужна debug информация.
Внутри инстанс методов мы не можем вызывать методы класса.

Класс.метод - метод класса вызывается, Класс#метод - вызывается инстанс метод.
=end

# Создадим базовый класс для всех автомобилей
class Car
  attr_reader :current_rpm
  # добавим счетчик класса

  @@instances = 0 # переменная класса

  
  # Первый способ объявления метода класса при помощи self:

  # def self.description
  #   puts 'Это родительский класс всех авто'
  # end

  def self.debug(log)
    puts "!!! DEBUG #{log} !!!"
  end

  debug 'START DEBUG'

  def self.instances
    @@instances
  end

  # Если несколько методов класса нужно записать и не хочется постоянно писать 'self' - применим другой синтаксис:

  class << self
    def description
      puts 'Это родительский класс всех авто '
    end

    def description2
      puts '2ой метод родительского класса всех авто'
    end

    # Все методы в этой конструкции будут методами класса.
  end

  # а если добавим такой метод без self - это будет методом инстанса

  def description
    puts 'Метод экземпляра класса Car.'
  end

  def initialize
    @current_rpm = 0
    @@instances += 1
    # Для того чтобы вызвать из инстанс метода, метод класса нужно написать:
    self.class.debug 'initialize'
  end

  def start_engine
    start_engine! if engine_stopped?
  end

  def engine_stopped?
    current_rpm.zero?
  end

  debug 'STOP DEBUG!!!'

  protected

  attr_writer :current_rpm

  def initial_rpm
    700
  end


  def start_engine!
    self.current_rpm = initial_rpm
  end
end

Car.description
# Если теперь создать объект - у него этого метода не будет. Будет ошибка:
kia = Car.new
polo = Car.new
# kia.description
kia.description # Реализация метода берется из инстанс метода
p Car.instances
puts '---------------------------------------'
# self.class.debug 'initialize'
Car.new
puts '_________________________________'
