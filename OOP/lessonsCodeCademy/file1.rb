=begin

Почему именно классы?
Ruby - объектно-ориентированный язык программирования, что означает, что он оперирует программными конструкциями,
называемыми объектами. (Почти) все в Ruby является объектом! Вы все время пользовались ими, поэтому они должны быть очень
знакомы. Объекты имеют методы, которые вы уже видели, и атрибуты, которые представляют собой просто данные. Например, в

"Matz".length
# ==> 4

объект "Matz" представляет собой строку с методом .length и атрибутом length, равным 4.

Но что именно делает "Matz" строкой? То, что он является экземпляром класса String. Класс - это способ организации
и создания объектов со схожими атрибутами и методами.

=end

class Language
  def initialize(name, creator)
    @name = name
    @creator = creator
  end
	
  def description
    puts "I'm #{@name} and I was created by #{@creator}!"
  end
end

ruby = Language.new("Ruby", "Yukihiro Matsumoto")
python = Language.new("Python", "Guido van Rossum")
javascript = Language.new("JavaScript", "Brendan Eich")

ruby.description
python.description
javascript.description

puts '__________________________________________________________________________________'
=begin

Синтаксис класса
Базовый класс состоит только из ключевого слова class и имени класса. Проверьте это:

class NewClass
# Магия класса здесь
end

Наш NewClass способен создавать новые объекты Ruby класса NewClass (так же, как "Hello!" - это String, а 4 - Fixnum).
По традиции, имена классов начинаются с заглавной буквы и используют CamelCase, а не полагаются_на_андеркоры.

=end

# Создание класса Person

=begin

Классификация
Мы хотели бы, чтобы наши классы делали больше, чем... ну, ничего, поэтому нам придется добавить некоторый код между
классом Person и его концом.

Вы, наверное, заметили, что в нашем примере, приведенном в первом упражнении,
мы начали определение класса с метода initialize. Можно считать, что initialize - это функция, которая "загружает"
каждый объект, создаваемый классом

В Ruby мы используем @ перед переменной, чтобы указать, что это переменная экземпляра. Это означает
что переменная привязана к экземпляру класса.


=end

puts 'class Person:'

class Person

  def initialize(name)
    @name = name
  end
  
end

me = Person.new('Denis')

